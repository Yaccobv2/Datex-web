var urlFromBrowser;var savedConfigData="/webapp/data/config.json";var scriptToSavedConfigData="/webapp/setConfig.php";$(document).ready(function(){		urlFromBrowser=self.location.hostname	console.log(urlFromBrowser);});/** * @brief Keeps button clicked while using saved data or new data card and updates content with data * downloaded from server. Buttons works as a cards. * @param button1: button to keep clicked * @param button2: button to unclick * @param data1: part of UI to display * @param data2: part of UI to hide */function chooseCard(button1, button2, data1, data2) { $(button1).get(0).style.background='lightgrey'; $(button2).get(0).style.background='grey'; $(data1).get(0).style.display ='block'; $(data2).get(0).style.display ='none'; if(button1.id==="savedSettings"){	 getConfigDataFromServer(); }}/*** @brief Download config data from server and starts updateConfigValues function.*/function getConfigDataFromServer() {	$.ajax(savedConfigData, {			type: 'GET', 			dataType: 'json',			crossDomain: true,			cache: false,			success: function(responseJSON, status, xhr) {				console.log(responseJSON)				updateConfigValues(responseJSON);			},			error: function (ajaxContext) {				console.log("Error while getting data from server");			},					}); }/** * @brief Update content o displayed config with data downloaded from server * @param responseJSON: data structure that keeps information about configuration */function updateConfigValues(responseJSON){	document.getElementById("IP_Adress_data").textContent=responseJSON.ip;	document.getElementById("Port_data").textContent=responseJSON.port;	document.getElementById("SampleTime_data").textContent=responseJSON.sampleTime;	document.getElementById("SampleQuantity_data").textContent=responseJSON.sampleQuantity;	console.log("Config data updated");}/** * @brief Get data from user, check if data was set and create data structure to send to server */function getConfigDataToUpdate(){	var JSONtext='';		var ip=document.getElementById("IP_Adress").value;		if(ip!=""){JSONtext=JSONtext+"ip="+ip;}		var port=document.getElementById("Port").value;	if(port!=""){JSONtext=JSONtext+"&&port="+port;}		var sampleTime=document.getElementById("SampleTime").value;	if( sampleTime!=""){JSONtext=JSONtext+"&&sampleTime="+sampleTime;}		var sampleQuantity=document.getElementById("SampleQuantity").value;	if( sampleQuantity!=""){JSONtext=JSONtext+"&&sampleQuantity="+sampleQuantity;}				console.log(JSONtext);	return JSONtext}/** * @brief Gets string from getConfigDataToUpdate function and sends it to server */function updateConfig(){	//Format for POST method: ip=...&&port=...&&sampleTime=...&&sampleQuantity=...	var JSONtext=getConfigDataToUpdate();	console.log("Updating Config...");		$.ajax(scriptToSavedConfigData, {			type: "POST",			data: JSONtext,			dataType: "text",			crossDomain: true,						beforeSend: function(x) {				console.log("AJAX POST REQUEST: initialization");			},			success: function(result) {				console.log("AJAX POST REQUEST SUCCESFULL: " + result);			},			error: function(XMLHttpRequest, textStatus, errorThrown) {				console.log("AJAX POST REQUEST: FAILURE");				console.log("STATUS: " + textStatus);				console.log("ERROR: " + errorThrown);			},			cache: false				});	}/** * @brief Sends empty update config request to set default data. */function updateConfigToDefault() {	console.log("Reseting Config");	$.ajax(scriptToSavedConfigData, {		type: "GET",		crossDomain: true,		beforeSend: function(x) {			console.log("AJAX POST REQUEST: BEGIN SENDING");		},		success: function(result) {			console.log("AJAX POST REQUEST SUCCESFULL: " + result);			window.alert("Config reset to default!");		},		error: function(XMLHttpRequest, textStatus, errorThrown) {			console.log("AJAX POST REQUEST: FAILURE");			console.log("STATUS: " + textStatus);			console.log("ERROR: " + errorThrown);		},		cache: false	});}